TODOs to made:

Matrix:
    -make specialization for:
        1 - integral, floating_point (joined)
        2 - bool (make it better)
        3 - integral
        4 - floating_point
        5 - generic for all arithmetric types.

Graphs:
    -make them (._.)

Xpres:
    -repare replace_current function.
    -add the parameters 'bool replce_in_repetition' and 'bool take_comming' to get more maneuveravility.
    -error when trying to use an iterator that where used before to compose().
    -restructure the code to hold data of tokens with 'typedef std::pair<char, void*> value_t' to get make 
        it more readible and effitient.
    -make support for the following functions:
        - log2 (base 2 logarithm).
        - log10 (base 10 logarithm).
        - randM (return a matrix of double random numbers).
        - randI (return a matrix of integer random numbers).
        - randd (return a double random number).
        - randd (return a integer random number).
        - possibly functions with more than one parameter.
    -add this functions:
        Xpres::simplify_values () 
        Xpres::iterator::simplify_values () 
            -> make all posible operations to reduce the quantity of nodes, that means:
                reduce the double minus, operate the operators that have constant operands, etc.

        Xpres::iterator::get_xpres () 
            -> return a Xpres that is a copy of the pointed subXpres.

        Xpres::iterator::to_right (uint64_t q)
            -> move the poined subXpres q positions to right.

        Xpres::iterator::to_left (uint64_t q)
            -> move the poined subXpres q positions to left.

        Xpres::iterator::quit_current () 
            -> remove only the pointed subXpres.

        quit_node_u (Xpres::iterator it) 
            -> remove the pointed unitary node, keeping the Xpres valid.

        ----------------dont know if needed----------------

        Xpres::iterator::to_son (Xpres::iterator it)    
            -> move the pointed subXpres by it to be the first son of *this.

        Xpres::iterator::to_sibling (Xpres::iterator it)    
            -> move the pointed subXpres by it to be a sibling of *this.




